name: Build Android APK

on:
  push:
    branches: [ main, development ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release type'
        required: true
        default: 'debug'
        type: choice
        options:
        - debug
        - release

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    - name: Setup Java JDK
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
          android/.gradle
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Setup Android SDK
      run: |
        # Install Android SDK command line tools
        sudo apt-get update
        sudo apt-get install -y wget unzip
        
        # Set up Android SDK environment
        export ANDROID_HOME=${GITHUB_WORKSPACE}/android-sdk
        export ANDROID_SDK_ROOT=${ANDROID_HOME}
        mkdir -p ${ANDROID_HOME}/cmdline-tools
        
        # Download and install command line tools
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
        unzip -q commandlinetools-linux-11076708_latest.zip -d ${ANDROID_HOME}/cmdline-tools
        mv ${ANDROID_HOME}/cmdline-tools/cmdline-tools ${ANDROID_HOME}/cmdline-tools/latest
        
        # Add to PATH
        export PATH=${ANDROID_HOME}/cmdline-tools/latest/bin:${ANDROID_HOME}/platform-tools:${PATH}
        echo "${ANDROID_HOME}/cmdline-tools/latest/bin" >> $GITHUB_PATH
        echo "${ANDROID_HOME}/platform-tools" >> $GITHUB_PATH
        echo "ANDROID_HOME=${ANDROID_HOME}" >> $GITHUB_ENV
        echo "ANDROID_SDK_ROOT=${ANDROID_HOME}" >> $GITHUB_ENV
        
        # Accept licenses and install packages
        yes | sdkmanager --licenses
        sdkmanager "platform-tools" "build-tools;35.0.0" "platforms;android-35"
      
    - name: Install dependencies
      run: npm ci
      
    - name: Build web assets
      run: npm run build
      
    - name: Setup Capacitor
      run: |
        npm install -g @capacitor/cli
        npx cap sync android
        
    - name: Verify Android Environment
      run: |
        echo "Java version:"
        java -version
        echo "Android SDK path:"
        echo $ANDROID_SDK_ROOT
        echo "Available build tools:"
        ls -la $ANDROID_SDK_ROOT/build-tools/
        echo "Available platforms:"
        ls -la $ANDROID_SDK_ROOT/platforms/
        
    - name: Grant execute permission for gradlew
      run: chmod +x android/gradlew
      
    - name: Build Debug APK
      if: ${{ github.event.inputs.release_type == 'debug' || github.event.inputs.release_type == '' }}
      run: |
        cd android
        ./gradlew assembleDebug --stacktrace
        
    - name: Build Release APK
      if: ${{ github.event.inputs.release_type == 'release' }}
      env:
        SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
        SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
        SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
      run: |
        cd android
        # Decode base64 keystore and save to file
        echo "${{ secrets.SIGNING_KEYSTORE_BASE64 }}" | base64 -d > app/keystore.jks
        ./gradlew assembleRelease --stacktrace
        
    - name: Upload Debug APK
      if: ${{ github.event.inputs.release_type == 'debug' || github.event.inputs.release_type == '' }}
      uses: actions/upload-artifact@v4
      with:
        name: ravintola-tirva-debug-${{ github.run_number }}
        path: android/app/build/outputs/apk/debug/*.apk
        retention-days: 30
        
    - name: Upload Release APK
      if: ${{ github.event.inputs.release_type == 'release' }}
      uses: actions/upload-artifact@v4
      with:
        name: ravintola-tirva-release-${{ github.run_number }}
        path: android/app/build/outputs/apk/release/*.apk
        retention-days: 90
        
    - name: Create Release
      if: ${{ github.event.inputs.release_type == 'release' && github.ref == 'refs/heads/main' }}
      id: create_release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ github.run_number }}
        name: Ravintola Tirva v${{ github.run_number }}
        body: |
          ## Ravintola Tirva Kitchen App Release
          
          ### Features
          - 🖨️ Network printer support with ESC/POS commands
          - 🛒 WooCommerce integration with webhooks
          - 📱 Android notifications with accept/refuse actions
          - 🔊 Audio alerts for new orders
          - 📄 Automatic receipt printing
          
          ### Changes in this release
          - Enhanced printer connection and testing
          - Improved WooCommerce webhook processing
          - Better error handling and user feedback
          - Android-optimized notifications and background operation
          
          ### Installation
          Download the APK below and install on your Android device.
          Make sure to enable "Install from unknown sources" in your device settings.
          
        draft: false
        prerelease: false
        files: android/app/build/outputs/apk/release/*.apk
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
