name: Deploy to Production

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production

jobs:
  deploy-web:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build for production
      run: npm run build
      env:
        NODE_ENV: production
        
    - name: Deploy to Staging
      if: ${{ github.event.inputs.environment == 'staging' }}
      run: |
        echo "Deploying to staging environment..."
        # Add your staging deployment commands here
        # For example, deploy to Netlify, Vercel, or your hosting provider
        
    - name: Deploy to Production
      if: ${{ github.event.inputs.environment == 'production' || github.event_name == 'release' }}
      run: |
        echo "Deploying to production environment..."
        # Add your production deployment commands here
        
    - name: Notify deployment success
      if: success()
      run: |
        echo "Deployment completed successfully!"
        
  build-production-apk:
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Setup Java JDK
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Install dependencies
      run: npm ci
      
    - name: Build web assets
      run: npm run build
      env:
        NODE_ENV: production
        
    - name: Setup Capacitor
      run: |
        npm install -g @capacitor/cli
        npx cap sync android
        
    - name: Grant execute permission for gradlew
      run: chmod +x android/gradlew
      
    - name: Build Release APK
      env:
        SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
        SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
        SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
      run: |
        cd android
        # Decode base64 keystore and save to file
        echo "${{ secrets.SIGNING_KEYSTORE_BASE64 }}" | base64 -d > app/keystore.jks
        ./gradlew assembleRelease
        
    - name: Upload Production APK
      uses: actions/upload-artifact@v4
      with:
        name: ravintola-tirva-production-${{ github.event.release.tag_name }}
        path: android/app/build/outputs/apk/release/*.apk
        retention-days: 365
